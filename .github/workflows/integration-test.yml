# SPDX-FileCopyrightText: Nextcloud contributors
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Integration test

on:
  pull_request:
  push:
    branches:
      - main
      - stable*

env:
  APP_NAME: context_chat

concurrency:
  group: integration-test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  transcription:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: [ '8.1' ]
        databases: [ 'sqlite' ]
        server-versions: [ 'master', 'stable28' ]

    name: Integration test on ${{ matrix.server-versions }} php@${{ matrix.php-versions }}

    env:
      MYSQL_PORT: 4444
      PGSQL_PORT: 4445

    services:
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
      postgres:
        image: postgres
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_mysql, pdo_sqlite, pgsql, pdo_pgsql, gd, zip

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Checkout backend
        uses: actions/checkout@v2
        with:
          repository: kyteinsky/cwyd_backend
          path: cwyd_backend/

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.1
        id: versions
        with:
          path: apps/${{ env.APP_NAME }}
          fallbackNode: '^16'
          fallbackNpm: '^8'

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Install app
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          make all
          composer install --no-dev

      - name: Set up Nextcloud and install app
        if: ${{ matrix.databases != 'pgsql'}}
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$MYSQL_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable -vvv -f ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Set up Nextcloud and install app
        if: ${{ matrix.databases == 'pgsql'}}
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$PGSQL_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable -vvv -f ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Install app_api
        run: |
          ./occ app:enable -vvv app_api

      - name: Install
        run: |
          ./occ app:enable -vvv ${{ env.APP_NAME }}

      - name: Install and init backend
        run: |
          cd cwyd_backend
          python3 -m venv .venv
          . .venv/bin/activate
          pip install --no-deps -r reqs.txt
          cp example.env .env
          echo "DISABLE_CUSTOM_DOWNLOAD_URI=1" >> .env
          echo "NEXTCLOUD_URL=http://localhost:8080" >> .env
          curl -L https://huggingface.co/TheBloke/dolphin-2.2.1-mistral-7B-GGUF/resolve/main/dolphin-2.2.1-mistral-7b.Q5_K_M.gguf -o model_files/dolphin-2.2.1-mistral-7b.Q5_K_M.gguf
          ./main.py &

      - name: Register backend
        run: |
          ./occ app_api:daemon:register --net host manual_install "Manual Install" manual-install http null http://localhost:8080
          # '&' because app:register has a bug that causes it to stall forever...
          ./occ app_api:app:register schackles manual_install --json-info "{\"appid\":\"schackles\",\"name\":\"Nextcloud Assistant Context Chat Backend\",\"daemon_config_name\":\"manual_install\",\"version\":\"1.0.0\",\"secret\":\"12345\",\"host\":\"localhost\",\"port\":10034,\"scopes\":{\"required\":[],\"optional\":[]},\"protocol\":\"http\",\"system_app\":0}" --force-scopes &

      - name: Checkout documentation
        uses: actions/checkout@v2
        with:
          repository: nextcloud/documentation
          path: data/admin/files/documentation

      - name: Prepare docs
        run: |
          cd data/admin/files/documentation
          find ./ -depth -name "*.rst" -exec sh -c 'mv "$1" "${1%.rst}.txt"' _ {} \;
          git status

      - name: Scan files
        run: |
          ./occ files:scan --all
          ./occ context_chat:scan admin

      - name: Run prompt
        run: |
          ./occ context_chat:prompt admin "Which factors are taken into account for the Ethical AI Rating?"

      - name: Show log on failure
        if: always()
        run: |
          tail data/nextcloud.log
